#Catalog\Product Related API

extend type Query @guard(with: ["admin-api"]){
    getAllBookingPaymentsAndTransactionsResponse(input: BookingPaymentsAndTransactionsInput): [BookingPaymentsAndTransactionsResponse!] @paginate(type: "paginator", defaultCount: 10, resolver: "Webkul\\GraphQLAPI\\Mutations\\Catalog\\BookingPaymentsAndTransactionsMutation@getAllBookingPaymentsAndTransactionsResponse")

    getParticularBookingPaymentsAndTransactionsResponse(id: ID!): BookingPaymentsAndTransactionsResponse! @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Catalog\\BookingPaymentsAndTransactionsMutation@getParticularBookingPaymentsAndTransactionsResponse")
}

extend type Mutation @guard(with: ["admin-api"]) {
    updateOrderStatus(order_id: ID!, status: String!): ChangeOrderStatusResponse @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Catalog\\BookingPaymentsAndTransactionsMutation@updateOrderStatus")
}

input UpdateOrderStatusInput {
    order_id: ID!
    status: String!
}

input BookingPaymentsAndTransactionsInput {
    customer_name: String
    email: String
    status: String
}

type ChangeOrderStatusResponse {
    status: String
    success: String
}

type BookingPaymentsAndTransactionsResponse {
    id: ID!
    order_id: String
    status: String
    customer_name: String
    customer_email: String
    grand_total: Float
    mode_of_payment: String
    created_at: String
    updated_at: String
}