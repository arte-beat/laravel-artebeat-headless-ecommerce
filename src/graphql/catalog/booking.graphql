#Catalog\Bookings Related API
extend type Query {
    bookingProducts: [BookingProduct!] @paginate(type: "paginator" defaultCount: 10 model:"Webkul\\GraphQLAPI\\Models\\BookingProduct\\BookingProduct")
    bookingProduct(id: ID @eq): BookingProduct @find(model: "Webkul\\GraphQLAPI\\Models\\BookingProduct\\BookingProduct")

    bookings: [Booking!] @paginate(type: "paginator" defaultCount: 10 model:"Webkul\\BookingProduct\\Models\\Booking")
    booking(id: ID @eq): Booking @find(model: "Webkul\\BookingProduct\\Models\\Booking")
}

input CreateBookingInput {
    type: String!
    location: String!
    city: String!
    latitude: String!
    longitude: String!
    age_restriction: Int
    event_type: Int!
    website: String!
    instagram: String!
    twitter: String!
    tiktok: String!
    soundcloud: String!
    youtube: String!
    youtubeLink: String @rename(attribute: "youtube_link")
    availableFrom: String @rename(attribute: "available_from")
    availableTo: String @rename(attribute: "available_to")
    tickets: [CreateBookingTicketsInput!]
}

input UpdateBookingInput {
    type: String!
    location: String!
    qty: Int
    availableFrom: String @rename(attribute: "available_from")
    availableTo: String @rename(attribute: "available_to")
    bookingType: String @rename(attribute: "booking_type")
    availableEveryWeek: Boolean @rename(attribute: "available_every_week")
    duration: Int
    breakTime: Int @rename(attribute: "break_time")
    sameSlotAllDays: Boolean @rename(attribute: "same_slot_all_days")
    slots: [BookingSlotsInput!]
    tickets: [BookingTicketsInput!]
    rentalSlot: BookingRentalInput @rename(attribute: "rental_slot")
    tableSlot: BookingTableInput @rename(attribute: "table_slot")
}

input BookingSlotsInput {
    day: Int
    fromDay: Int @rename(attribute: "from_day")
    from: String!
    toDay: Int @rename(attribute: "to_day")
    to: String!
}

input BookingTicketsInput {
    locales: [BookingTicketsTranslationsInput!]
    specialPrice: Float @rename(attribute: "special_price")
    price: Float!
    qty: Int!
    specialPriceFrom: String @rename(attribute: "special_price_from")
    specialPriceTo: String @rename(attribute: "special_price_to")
}

input CreateBookingTicketsInput {
    name: String!
    price: Float!
    qty: Int!
}

input CreateBookingTicketsTranslationsInput {
    locale: String!
    name: String!
    description: String
}

input BookingTicketsTranslationsInput {
    locale: String!
    name: String!
    description: String
}

input BookingRentalInput {
    rentingType: String! @rename(attribute: "renting_type")
    dailyPrice: Float @rename(attribute: "daily_price")
    hourlyPrice: Float @rename(attribute: "hourly_price")
    slots: [BookingSlotsInput!]
}

input BookingTableInput {
    priceType: String! @rename(attribute: "price_type")
    guestLimit: Int @rename(attribute: "guest_limit")
    preventSchedulingBefore: Int! @rename(attribute: "prevent_scheduling_before")
    slots: [BookingSlotsInput!]
}

type Booking {
    id: ID!
    qty: Int
    availableFrom: Int @rename(attribute: "available_from")
    availableTo: Int @rename(attribute: "available_to")
    orderItemId: ID @rename(attribute: "order_item_id")
    bookingProductEventTicketId: ID @rename(attribute: "booking_product_event_ticket_id")
    productId: ID! @rename(attribute: "product_id")
    orderId: ID! @rename(attribute: "order_id")
    order: Order! @belongsTo(relation: "order")
}

type BookingProduct {
    id: ID!
    type: String!
    qty: Int
    location: String
    city: String!
    latitude: String!
    longitude: String!
    age_restriction: Int
    event_type: Int!
    website: String!
    instagram: String!
    twitter: String!
    tiktok: String!
    soundcloud: String!
    youtube: String!
    youtubeLink: String @rename(attribute: "youtube_link")
    showLocation: Boolean @rename(attribute: "show_location")
    availableEveryWeek: Boolean @rename(attribute: "available_every_week")
    eventDate: String @rename(attribute: "event_date")
    eventTime: String @rename(attribute: "event_time")
    eventDuration: String @rename(attribute: "event_duration")
    availableFrom: DateTime @rename(attribute: "available_from")
    availableTo: DateTime @rename(attribute: "available_to")
    productId: ID! @rename(attribute: "product_id")
    eventPwd: String @rename(attribute: "event_pwd")
    defaultSlot: DefaultBookingProductSlots @belongsTo(relation: "default_slot")
    appointmentSlot: AppointmentBookingProductSlots @belongsTo(relation: "appointment_slot")
    eventTickets: [TicketBookingProductSlots!] @belongsToMany(relation: "event_tickets")
    rentalSlot: RentalBookingProductSlots @belongsTo(relation: "rental_slot")
    tableSlot: TableBookingProductSlots @belongsTo(relation: "table_slot")
    product: Product! @belongsTo(relation: "product")
}



# Default Booking Type
type DefaultBookingProductSlots {
    id: ID!
    bookingType: String! @rename(attribute: "booking_type")
    duration: Int
    breakTime: Int @rename(attribute: "break_time")
    slots: [DefaultSlots!]
    bookingProductId: ID! @rename(attribute: "booking_product_id")
}

type DefaultSlots {
    to: String!
    toDay: Int! @rename(attribute: "to_day")
    from: String!
    fromDay: Int! @rename(attribute: "from_day")
}

# Appointment Booking Type
type AppointmentBookingProductSlots {
    id: ID!
    duration: Int
    breakTime: Int @rename(attribute: "break_time")
    sameSlotAllDays: Boolean @rename(attribute: "same_slot_all_days")
    slots: [[BookingDaySlots!]]
    bookingProductId: ID! @rename(attribute: "booking_product_id")
}

type BookingDaySlots {
    id: String
    day: Int
    from: String
    to: String
}

# Ticket Event Booking Type
type TicketBookingProductSlots {
    id: ID!
    price: Float!
    qty: Int!
    name: String!
    bookingProductId: ID! @rename(attribute: "booking_product_id")
}

type BookingTicketsTranslations {
    locale: String!
    name: String!
}

# Rental Booking Type
type RentalBookingProductSlots {
    id: ID!
    rentingType: String! @rename(attribute: "renting_type")
    dailyPrice: Float @rename(attribute: "daily_price")
    hourlyPrice: Float @rename(attribute: "hourly_price")
    sameSlotAllDays: Boolean @rename(attribute: "same_slot_all_days")
    slots: [[BookingDaySlots!]]
    bookingProductId: ID! @rename(attribute: "booking_product_id")
}

# Table Booking Type
type TableBookingProductSlots {
    id: ID!
    priceType: String! @rename(attribute: "price_type")
    guestLimit: Int @rename(attribute: "guest_limit")
    duration: Int
    breakTime: Int @rename(attribute: "break_time")
    preventSchedulingBefore: Boolean! @rename(attribute: "prevent_scheduling_before")
    sameSlotAllDays: Boolean! @rename(attribute: "same_slot_all_days")
    slots: [BookingDaySlots!]
    bookingProductId: ID! @rename(attribute: "booking_product_id")
}