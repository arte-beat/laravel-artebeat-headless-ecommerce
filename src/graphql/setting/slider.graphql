# Setting\Slider Related APIs
extend type Query {
    sliders(input: FilterSliderInput @builder(method: "Webkul\\GraphQLAPI\\Queries\\Setting\\FilterSlider")): [Slider!] @paginate(type: "paginator" defaultCount:10 model: "Webkul\\GraphQLAPI\\Models\\Setting\\Slider")

    slider(id: ID! @eq): Slider @find(model: "Webkul\\GraphQLAPI\\Models\\Setting\\Slider")
}

extend type Mutation @guard {
    createSlider(
        input: CreateSliderInput!
    ): Slider @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Setting\\SliderMutation@store")

    updateSlider(
        id: ID!,
        input: CreateSliderInput!
    ): Slider @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Setting\\SliderMutation@update")
    
    deleteSlider(id: ID!): DeleteSliderResponse  @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Setting\\SliderMutation@delete")
}

input FilterSliderInput {
    id: ID
    title: String
    locale: String
    channel: String
}

input CreateSliderInput {
    locale: String!
    title: String!
    channelId: Int! @rename(attribute: "channel_id")
    expiredAt: String! @rename(attribute: "expired_at")
    sortOrder: Int @rename(attribute: "sort_order")
    content: String
    sliderPath: String @rename(attribute: "slider_path")
    image: String!
}

type Slider {
    id: ID!
    title: String!
    path: String!
    imageUrl: String @rename(attribute: "image_url")
    content: String
    channelId: ID! @rename(attribute: "channel_id")
    locale: String!
    sliderPath: String @rename(attribute: "slider_path")
    imgPath: String @rename(attribute: "img_path")
    channel: Channel! @belongsTo
}

type DeleteSliderResponse {
    status: Boolean
    message: String     
}