#Shop\Customer\Profile Related APIs
extend type Query @guard(with: ["api"]) {
    # Please
    getProfile: ProfileInfoResult @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Shop\\Customer\\ProfileMutation@get")
}

extend type Mutation @guard(with: ["api"]) {
    updateProfile(
        input: UpdateProfileInput!
    ): ProfileInfoResult @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Shop\\Customer\\ProfileMutation@update")

    changeCustomerType(
        input: ChangeCustomerTypeInput!
    ): ChangeCustomerTypeResponse  @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Shop\\Customer\\ProfileMutation@changeCustomerType")

    deleteProfile(
        input: DeleteProfileInput!
    ): ProfileDeleteResponse  @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Shop\\Customer\\ProfileMutation@delete")
}

input UpdateProfileInput {
    firstName: String! @rename(attribute: "first_name")
    lastName: String! @rename(attribute: "last_name")
    gender: String!
    email: String!
    dateOfBirth: String @rename(attribute: "date_of_birth")
    phone: String
    oldpassword: String
    password: String
    passwordConfirmation: String @rename(attribute: "password_confirmation")
    uploadType: UploadType @rename(attribute: "upload_type")
    imageUrl: String @rename(attribute: "image_url")
    image: Upload
}

input ChangeCustomerTypeInput {
    password: String!
}

input DeleteProfileInput {
    password: String!
}

type ProfileInfoResult {
    status: Boolean
    message: String
    customer: Customer
}

type ChangeCustomerTypeResponse {
    status: Boolean
    success: String
}

type ProfileDeleteResponse {
    status: Boolean
    success: String
}

enum UploadType {
    FILE @enum(value: "file")
    PATH @enum(value: "path")
    BASE64 @enum(value: "base64")
}
