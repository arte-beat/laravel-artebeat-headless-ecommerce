# Artist Related APIs
extend type Query @guard {
    artists(input: FilterArtistInput @builder(method: "Webkul\\GraphQLAPI\\Queries\\Master\\FilterArtist")): [Artist!] @paginate(type: "paginator" defaultCount:10 model: "Webkul\\Product\\Models\\Artist")

    artist(id: ID @eq): Artist @find(model: "Webkul\\Product\\Models\\Artist")
}

extend type Mutation @guard {
    createArtist(
        input: ArtistInput!
    ): Artist @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Master\\ArtistMutation@store")

    updateArtist(
        id: ID!,
        input: ArtistInput!
    ): Artist @guard @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Master\\ArtistMutation@update")

    deleteArtist(id: ID!): Artist @guard @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Master\\ArtistMutation@delete")
}

input ArtistInput {
    artist_name: String!
    artist_type: Int!
    description: String!
    website: String!
    tiktok: String!
    twitter: String!
    instagram: String!
}

input FilterArtistInput {
    id: Int
    artist_name: String
    artist_type: Int
}

type Artist {
    id: ID!
    artist_name: String! @rename(attribute: "artist_name")
    artist_type: String! @rename(attribute: "artist_type")
    description: String! @rename(attribute: "description")
    website: String! @rename(attribute: "website")
    tiktok: String! @rename(attribute: "tiktok")
    twitter: String! @rename(attribute: "twitter")
    instagram: String! @rename(attribute: "instagram")
    createdAt: DateTime @rename(attribute: "created_at")
    updatedAt: DateTime @rename(attribute: "updated_at")
    success: String
}