# Promoter Related APIs
extend type Query @guard {
    promoters(input: FilterPromoterInput @builder(method: "Webkul\\GraphQLAPI\\Queries\\Master\\FilterPromoter")): [Promoter!] @paginate(type: "paginator" defaultCount:10 model: "Webkul\\Product\\Models\\Promoter")

    promoter(id: ID @eq): Promoter @find(model: "Webkul\\Product\\Models\\Promoter")
}

extend type Mutation @guard {
    createPromoter(
        input: PromoterInput!
    ): Promoter @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Master\\PromoterMutation@store")

    updatePromoter(
        id: ID!,
        input: PromoterInput!
    ): Promoter @guard @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Master\\PromoterMutation@update")

    deletePromoter(id: ID!): Promoter @guard @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Master\\PromoterMutation@delete")
}

input PromoterInput {
    promoter_name: String!
    promoter_artist_type: Int!
    promoter_phone: String!
    promoter_email: String!
    promoter_status: Int!
}

input FilterPromoterInput {
    id: Int
    promoter_name: String
}

type Promoter {
    id: ID!
    promoter_name: String! @rename(attribute: "promoter_name")
    promoter_artist_type: Int! @rename(attribute: "promoter_artist_type")
    promoter_phone: String! @rename(attribute: "promoter_phone")
    promoter_email: String! @rename(attribute: "promoter_email")
    promoter_status: Int! @rename(attribute: "promoter_status")
    createdAt: DateTime @rename(attribute: "created_at")
    updatedAt: DateTime @rename(attribute: "updated_at")
}